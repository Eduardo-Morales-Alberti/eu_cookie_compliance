<?php
/**
 * @file
 * This module intends to deal with the EU Directive on Privacy and Electronic
 * Communications that comes into effect in the UK on 26th May 2012.
 */

/**
 * Implements hook_page_build().
 */
function eu_cookie_compliance_page_build(&$page) {
  $popup_settings = eu_cookie_compliance_get_settings();
  if (isset($popup_settings['eu_only']) && $popup_settings['eu_only'] && \Drupal::moduleHandler()->moduleExists('geoip')) {
    $geoip_match = false;
    if (function_exists('geoip_country_code')) {
      if (in_array(geoip_country_code(), array('BE', 'BG', 'CZ', 'DK', 'DE', 'EE', 'IE', 'EL', 'ES', 'FR', 'IT', 'CY', 'LV', 'UK', 'LT', 'LU', 'HU', 'MT', 'NL', 'AT', 'PL', 'PT', 'RO', 'SI', 'SK', 'FI', 'SE'))) {
        $geoip_match = true;
      }
    }
  }
  else {
    $geoip_match = true;
  }
  if (!empty($popup_settings['popup_enabled']) && \Drupal::currentUser()->hasPermission('display EU Cookie Compliance popup') && $geoip_match) {
    $language = Drupal::languageManager()->getCurrentLanguage();

    $popup_text_info = str_replace(array("\r", "\n"), '', $popup_settings['popup_info']['value']);
    $popup_text_agreed = str_replace(array("\r", "\n"), '', $popup_settings['popup_agreed']['value']);
    $html_info = array(
      '#theme' => 'eu_cookie_compliance_popup_info',
      '#message' => check_markup($popup_text_info, $popup_settings['popup_info']['format'], FALSE),
    );
    $html_info = drupal_render($html_info);
    $html_agreed = array(
      '#theme' => 'eu_cookie_compliance_popup_agreed',
      '#message' => check_markup($popup_text_agreed, $popup_settings['popup_agreed']['format'], FALSE),
    );
    $html_agreed = drupal_render($html_agreed);
    $variables = array('eu_cookie_compliance' =>
      array(
        'popup_enabled'        => $popup_settings['popup_enabled'],
        'popup_agreed_enabled' => $popup_settings['popup_agreed_enabled'],
        'popup_hide_agreed'    => isset($popup_settings['popup_hide_agreed']) ? $popup_settings['popup_hide_agreed'] : FALSE,
        'popup_html_info'      => empty($html_info) ? FALSE : $html_info,
        'popup_html_agreed'    => empty($html_agreed) ? FALSE : $html_agreed,
        'popup_height'         => ($popup_settings['popup_height']) ? (int) $popup_settings['popup_height'] : 'auto',
        'popup_width'          => (drupal_substr($popup_settings['popup_width'], -1) == '%') ? $popup_settings['popup_width'] : (int) $popup_settings['popup_width'],
        'popup_delay'          => (int) ($popup_settings['popup_delay'] * 1000),
        'popup_link'           => url($popup_settings['popup_link']),
        'popup_position'       => $popup_settings['popup_position'],
        'popup_language'       => $language->id,
        'popup_bg_hex'         => !empty($popup_settings['popup_bg_hex']) ? $popup_settings['popup_bg_hex'] : FALSE,
        'popup_text_hex'       => !empty($popup_settings['popup_text_hex']) ? $popup_settings['popup_text_hex'] : FALSE,
      ),
    );
    $page['#attached']['js'][] = array(
      'data' => $variables,
      'type' => 'setting',
    );
    $page['#attached']['library'][] = 'eu_cookie_compliance/eu_cookie_compliance';
  }
}

/**
 * Implements hook_permission().
 */
function eu_cookie_compliance_permission() {
  return array(
    'administer EU Cookie Compliance popup' => array(
      'title' => 'Administer EU Cookie Compliance popup'
    ),
    'display EU Cookie Compliance popup' => array(
      'title' => 'Display EU Cookie Compliance popup'
    ),
  );
}

/**
 * Implements hook_theme().
 */
function eu_cookie_compliance_theme($existing, $type, $theme, $path) {
  return array(
    'eu_cookie_compliance_popup_info' => array(
      'template' => 'eu_cookie_compliance_popup_info',
      'variables' => array('message' => NULL),
    ),
    'eu_cookie_compliance_popup_agreed' => array(
      'template' => 'eu_cookie_compliance_popup_agreed',
      'variables' => array('message' => NULL),
    ),
  );
}
/**
 * Retrieves settings from the database for a current language.
 */
function eu_cookie_compliance_get_settings($setting = 'all') {
  $language = Drupal::languageManager()->getCurrentLanguage();
  $language = $language->id;
  $popup_settings = \Drupal::config('eu_cookie_compliance.settings')->get($language);
  if ($setting == 'all') {
    return $popup_settings;
  }
  if (isset($popup_settings[$setting])) {
    return $popup_settings[$setting];
  }
  else {
    return NULL;
  }
}
